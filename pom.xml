<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.webforj.samples</groupId>
  <artifactId>webforj-samples</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <webforj.version>25.02</webforj.version>
    <warFileName>${project.artifactId}-${project.version}</warFileName>
    <jetty.version>12.0.14</jetty.version>
    <playwright.version>1.50.0</playwright.version>
    <threadCount>8</threadCount>

    <!--
      Configures automatic reload of Jetty server
      (with 1 second timeout) when new classes are compiled.
      Should be disabled when using a live reload system, such as JRebel.
      -->
    <jetty.scan>1</jetty.scan>
    <jetty.port>8998</jetty.port>
    <jetty.stopPort>9966</jetty.stopPort>

  </properties>
  <repositories>
    <repository>
      <name>Central Portal Snapshots</name>
      <id>central-portal-snapshots</id>
      <url>https://central.sonatype.com/repository/maven-snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.webforj</groupId>
        <artifactId>webforj-bom</artifactId>
        <version>${webforj.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>5.10.3</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>com.webforj</groupId>
      <artifactId>webforj</artifactId>
      <version>${webforj.version}</version>
    </dependency>
    <dependency>
      <groupId>com.webforj</groupId>
      <artifactId>webforj-engine</artifactId>
      <version>${webforj.version}</version>
    </dependency>
    <dependency>
      <groupId>com.webforj</groupId>
      <artifactId>webforj-googlecharts</artifactId>
    </dependency>
    <dependency>
      <groupId>com.webforj</groupId>
      <artifactId>webforj-terminal</artifactId>
    </dependency>
    <dependency>
      <groupId>com.microsoft.playwright</groupId>
      <artifactId>playwright</artifactId>
      <version>${playwright.version}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.tuckey</groupId>
      <artifactId>urlrewritefilter</artifactId>
      <version>5.1.3</version>
    </dependency>
    <dependency>
      <groupId>jakarta.servlet</groupId>
      <artifactId>jakarta.servlet-api</artifactId>
      <version>6.0.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.18.0</version>
    </dependency>
  </dependencies>
  <build>
    <finalName>${warFileName}</finalName>
    <plugins>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>1.15.1</version>
        <executions>
          <execution>
            <id>install node and npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <phase>generate-resources</phase>
          </execution>
          <execution>
            <id>npm install</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>generate-resources</phase>
          </execution>
          <execution>
            <id>npm run build</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <arguments>run build</arguments>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <nodeVersion>v23.5.0</nodeVersion>
          <npmVersion>10.9.2</npmVersion>
          <workingDirectory>docs</workingDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>clean-playwright-traces</id>
            <phase>pre-integration-test</phase>
            <configuration>
              <target>
                <delete dir="${project.build.directory}/playwright-traces" />
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>copy static docs</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}/static</outputDirectory>
              <resources>
                <resource>
                  <directory>docs/build</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.4.0</version>
        <configuration>
          <webResources>
            <resource>
              <filtering>true</filtering>
              <directory>src/main/webapp</directory>
              <includes>
                <include>**/web.xml</include>
              </includes>
            </resource>
          </webResources>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.eclipse.jetty.ee10</groupId>
        <artifactId>jetty-ee10-maven-plugin</artifactId>
        <version>${jetty.version}</version>
        <configuration>
          <scan>${jetty.scan}</scan>
          <stopPort>${jetty.stopPort}</stopPort>
          <stopKey>${project.artifactId}</stopKey>
          <stopWait>30</stopWait>
          <httpConnector>
            <port>${jetty.port}</port>
          </httpConnector>
          <webApp>
            <contextPath>/</contextPath>
          </webApp>
        </configuration>
        <executions>
          <execution>
            <id>start-jetty</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop-jetty</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.2.5</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.2.5</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <trimStackTrace>false</trimStackTrace>
          <parallel>both</parallel>
          <threadCount>${threadCount}</threadCount>
          <perCoreThreadCount>true</perCoreThreadCount>
          <useFile>false</useFile>
          <disableXmlReport>true</disableXmlReport>
          <consoleOutputReporter>
            <disable>false</disable>
          </consoleOutputReporter>
          <summaryFile>target/failsafe-reports/summary.txt</summaryFile>
          <includes>
            <include>**/*IT.java</include>
          </includes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>copy-webforj-config</id>
            <phase>process-resources</phase>
            <configuration>
              <target>
                <copy file="src/main/resources/${config.file}"
                  tofile="${project.build.outputDirectory}/webforj.conf" />
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Docker commands -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <!-- Build Docker image -->
          <execution>
            <id>docker-e2e-build</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>docker</executable>
              <arguments>
                <argument>build</argument>
                <argument>-t</argument>
                <argument>webforj-integration-tests</argument>
                <argument>.</argument>
              </arguments>
            </configuration>
          </execution>

          <!-- Build and run tests in Docker -->
          <execution>
            <id>docker-e2e</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>docker</executable>
              <arguments>
                <argument>run</argument>
                <!-- Remove container after run -->
                <argument>--rm</argument>
                <!-- Avoid zombie processes -->
                <argument>--init</argument>
                <!-- For Chromium shared memory https://playwright.dev/docs/ci#docker -->
                <argument>--ipc=host</argument>
                <!-- Mount the project directory to /app in the container -->
                <argument>--mount=type=bind,source=${project.basedir},target=/app</argument>
                <!-- Cache Maven dependencies in Docker volume -->
                <argument>-v</argument>
                <argument>webforj-e2e-maven-repo:/var/maven/.m2</argument>
                <argument>-e</argument>
                <argument>MAVEN_CONFIG=/var/maven/.m2</argument>
                <argument>webforj-integration-tests</argument>
                <argument>mvn</argument>
                <argument>-Dmaven.repo.local=/var/maven/.m2/repository</argument>
                <argument>verify</argument>
                <argument>-Dskip.npm</argument>
              </arguments>
            </configuration>
          </execution>

          <!-- Run specific test in Docker -->
          <execution>
            <id>docker-e2e-single</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>docker</executable>
              <arguments>
                <argument>run</argument>
                <!-- Remove container after run -->
                <argument>--rm</argument>
                <!-- Avoid zombie processes -->
                <argument>--init</argument>
                <!-- For Chromium shared memory https://playwright.dev/docs/ci#docker -->
                <argument>--ipc=host</argument>
                <!-- Pass CI environment variable -->
                <argument>-e</argument>
                <argument>CI=true</argument>
                <!-- Mount the project directory to /app in the container -->
                <argument>--mount=type=bind,source=${project.basedir},target=/app</argument>
                <!-- Cache Maven dependencies in Docker volume -->
                <argument>-v</argument>
                <argument>webforj-e2e-maven-repo:/var/maven/.m2</argument>
                <argument>-e</argument>
                <argument>MAVEN_CONFIG=/var/maven/.m2</argument>
                <argument>webforj-integration-tests</argument>
                <argument>mvn</argument>
                <argument>-Dmaven.repo.local=/var/maven/.m2/repository</argument>
                <argument>verify</argument>
                <argument>-Dit.test=${test}</argument>
                <argument>-Dskip.npm</argument>
                <argument>-Dwebforj.e2e=${webforj.e2e:}</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>prod</id>
      <activation>
      </activation>
      <properties>
        <config.file>webforj-prod.conf</config.file>
      </properties>
    </profile>
    <profile>
      <id>dev</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <config.file>webforj-dev.conf</config.file>
      </properties>
    </profile>
    <profile>
      <id>en-only</id>
      <properties>
        <config.file>webforj-prod.conf</config.file>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <version>1.15.0</version>
            <executions>
              <execution>
                <id>npm run build</id>
                <goals>
                  <goal>npm</goal>
                </goals>
                <phase>generate-resources</phase>
                <configuration>
                  <arguments>run build -- --locale en</arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>